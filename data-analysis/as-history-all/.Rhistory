shiny::runApp('C:/Users/Darius/git/trackas/data-analysis/as-history-all')
#' Scales the given vector with center 0
#' @param y vector to scale
#' @return A scaled vector where the data in y is expressed by its variation from the mean and scaled.
#' If there is no variation (sd(y) = 0), then a 0-vector of the same length as y is returned.
scale_this <- function(y)(y - mean(y)) / sd(y) ^ as.logical(sd(y))
runApp('C:/Users/Darius/git/trackas/data-analysis/as-history-all')
runApp('C:/Users/Darius/git/trackas/data-analysis/as-history-all')
install.packages("ggpubr")
library(ggpubr)
runApp('C:/Users/Darius/git/trackas/data-analysis/as-history-all')
runApp('C:/Users/Darius/git/trackas/data-analysis/as-history-all')
setwd("C:/Users/Darius/git/trackas/data-analysis")
df <- read.csv("incomplete-dataset.csv")
project="antlr"
plots <- c()
p <- ggplot(df.sig[df.sig$smellType==smellType,], aes(x="", group=classification, fill=classification)) +
geom_bar(width = 1, position = "stack") + coord_polar("y") +
labs(title = paste(project, "-", smellType)) +
scale_fill_brewer(palette=palette) +
theme_minimal()
plots <- c(plots, p)
df.sig <- classifySignal(df[df$project==project,], input$characteristic)
df.sig <- df.sig %>% group_by(classification) %>% add_tally()
df.sig <- classifySignal(df[df$project==project,], "size")
df.sig <- df.sig %>% group_by(classification) %>% add_tally()
p <- ggplot(df.sig[df.sig$smellType==smellType,], aes(x="", group=classification, fill=classification)) +
geom_bar(width = 1, position = "stack") + coord_polar("y") +
labs(title = paste(project, "-", smellType)) +
scale_fill_brewer(palette="Dark2") +
theme_minimal()
p <- ggplot(df.sig[df.sig$smellType=="cyclicDep",], aes(x="", group=classification, fill=classification)) +
geom_bar(width = 1, position = "stack") + coord_polar("y") +
labs(title = paste(project, "-", smellType)) +
scale_fill_brewer(palette="Dark2") +
theme_minimal()
p <- ggplot(df.sig[df.sig$smellType=="cyclicDep",], aes(x="", group=classification, fill=classification)) +
geom_bar(width = 1, position = "stack") + coord_polar("y") +
labs(title = paste(project, "-", "CD")) +
scale_fill_brewer(palette="Dark2") +
theme_minimal()
p
plots <- c(plots, p)
p1 <- ggplot(df.sig[df.sig$smellType=="unstableDep",], aes(x="", group=classification, fill=classification)) +
geom_bar(width = 1, position = "stack") + coord_polar("y") +
labs(title = paste(project, "-", "UD")) +
scale_fill_brewer(palette="Dark2") +
theme_minimal()
plots <- c(plots, p1)
p1
ggarrange(p, p2, ncol=2)
ggarrange(p, p1, ncol=2)
ggarrange(plist=plots, ncol=2)
do.call("ggarrange", c(plots, ncol=2))
do.call("ggarrange", c(plotlist=plots, ncol=2))
grid.arrange(grobs = plots, ncol=2)
plots2 <- as.list(c)
grid.arrange(grobs = plots2, ncol=2)
plots2
plots2 <- list(p1, p2)
plots2 <- list(p1, p)
grid.arrange(grobs = plots2, ncol=2)
do.call("ggarrange", c(plotlist=plots2, ncol=2))
plots
plots2 <- list(plots2, p1)
plots2 <- plots2[1]
plots2 <- plots2[[1]]
do.call("ggarrange", c(plotlist=plots2, ncol=2))
do.call("ggarrange", c(plotlist=plots2, ncol=2, common.legend = TRUE))
do.call("ggarrange", c(plotlist=plots2, ncol=2, common.legend = TRUE, label.x = levels(df$project)))
do.call("ggarrange", c(plotlist=plots2, ncol=2, common.legend = TRUE, label.x = c("antlr"))
)
do.call("ggarrange", c(plotlist=plots2, ncol=2, common.legend = TRUE, labels = "auto" ))
do.call("ggarrange", c(plotlist=plots2, ncol=2, common.legend = TRUE, labels = c("ud", "cd") ))
do.call("ggarrange", c(plotlist=plots2, ncol=2, common.legend = TRUE, labels = list("ud", "cd")))
do.call("ggarrange", c(plotlist=plots2, ncol=2, common.legend = TRUE, labels = c("ud", "cd")))
do.call("ggarrange", c(plotlist=plots2, ncol=2, common.legend = TRUE ))
ggarrange(plotlist=plots2, common.legend = TRUE)
ggarrange(plotlist=plots2, common.legend = TRUE, labels=c("cd", "ud"))
plots2[[3]]<-p1
plots2[[4]]<-p
ggarrange(plotlist=plots2, common.legend = TRUE, labels=c("cd", "ud"))
runApp('as-history-all')
runApp('as-history-all')
levels(df$project)
runApp('as-history-all')
runApp('as-history-all')
runApp('as-history-all')
runApp('as-history-all')
runApp('as-history-all')
df.sig <- classifySignal(df[df$project==project,], "size")
df.sig <- df.sig %>% group_by(classification) %>% add_tally() %>% mutate(n = (n * 100) / max(n))
df.sig
df.sig$n
df.sig <- classifySignal(df[df$project==project,], "size")
df.sig <- df.sig %>% group_by(classification) %>% add_tally() %>% summarise(max = max(n))
df.sig
df.sig <- df.sig %>% group_by(classification) %>% add_tally() %>% summarise(max = max(n))
df.sig
df.sig <- classifySignal(df[df$project==project,], "size")
df.sig2 <- df.sig %>% group_by(classification) %>% add_tally() %>% mutate(max = max(n))
df.sig$mas
df.sig$max
df.sig2$max
df.sig2 <- df.sig %>% group_by(classification) %>% add_tally() %>% mutate(max = max(n)) %>% summarise(n=n, max = max)
df.sig2 <- df.sig %>% group_by(classification) %>% add_tally() %>% mutate(max = max(n)) %>% summarise(n=max(n), max = max(max))
df.sig2
df.sig2 <- df.sig %>% group_by(classification) %>% mutate(max = max(n)) %>% summarise(max = max(max)) %>% add_tally()
df.sig2 <- df.sig %>% group_by(classification) %>% mutate(max = max(n)) %>% add_tally()
max
df.sig2 <- df.sig %>% group_by(classification) %>% add_tally() %>% mutate(max = max(n)) %>% summarise(n=max(n), max = max(max)) %>% add_tally()
df.sig2
df.sig2 <- df.sig %>% group_by(classification) %>% add_tally() %>% mutate(max = max(n)) %>% summarise(n=max(n), max = max(max)) %>% add_count()
df.sig2
df.sig2 <- df.sig %>% group_by(classification) %>% add_tally() %>% mutate(max = max(n)) %>% summarise(n=max(n), max = max(max)) %>% add_sum()
df.sig2 <- df.sig %>% group_by(classification) %>% add_tally() %>% mutate(max = max(n)) %>% summarise(n=max(n), max = max(max)) %>% add_tally()
df.sig2 <- df.sig %>% group_by(classification) %>% add_tally() %>% mutate(max = max(n)) %>% summarise(n=max(n), max = max(max)) %>% add_tally(name="n2")
df.sig2
df.sig2 <- df.sig %>% group_by(classification) %>% add_tally() %>% mutate(max = max(n)) %>% summarise(max = max(max)) %>% add_tally(name="n2")
df.sig2
df.sig2 <- df.sig %>% group_by(classification) %>% add_tally() %>% summarise(max = max(n))
df.sig2
df.sig2 <- df.sig %>% group_by(classification) %>% add_tally()
df.sig2
df.sig2 <- df.sig %>% group_by(classification) %>% add_tally() %>% mutate(max = max(n))
df.sig2
df.sig2$max
df.sig2 <- df.sig %>% group_by(classification) %>% add_tally() %>% summarise())
df.sig2 <- df.sig %>% group_by(classification) %>% add_tally() %>% summarise()
df.sig2
df.sig2 <- df.sig %>% group_by(classification) %>% add_tally() %>% mutate(max = max(n))
df.sig3 <- df.sig2 %>% mutate(n = n * 100/ max)
df.sig3$n
min(df.sig3$n)
df.sig3 <- df.sig2 %>% mutate(n2 = n * 100/ max)
min(df.sig3$n)
max(df.sig3$n)
max(df.sig3$n2)
min(df.sig3$n2)
runApp('as-history-all')
runApp('as-history-all')
runApp('as-history-all')
runApp('as-history-all')
runApp('as-history-all')
runApp('as-history-all')
runApp('as-history-all')
