#!/usr/bin/perl -w

use strict; 

#------------------- Main ---------------------------------

if ($ARGV[0] eq "-list") {
	#Return list of file names that are to be copied.
	my @list = list_names($ARGV[1]); #ARGV[1] contains path to a version of application.
	printf("@list"); #extract list using `./.install -list /path/to/version/of/application`;
}
elsif ($ARGV[0] eq "-reduced") {
	my $destination = $ARGV[1]; #path to a version of application.
	install($destination);

}
else {
	my $destination = $ARGV[0]; #path to a version of application.
	install($destination);
}

#----------------- Main End -------------------------------


sub install {
  my ($corpusdir) = @_;
  
      opendir(COMPRESSED, "$corpusdir/compressed") || die "can't open $corpusdir/compressed: $!";
      my @archives =grep {! /^\.$/ and ! /^\.\.$/} readdir(COMPRESSED);
      close(COMPRESSED);
       	
      my @src = grep {/^antlr/} @archives;
      my @bin = ("antlr-2.5.0/antlr.jar");
      
      if (@src != 1 || @bin != 1) {
      	die "ATTENTION - Problem idenfitying archives for $corpusdir\n";
      }
      	      	
      # Unpack Source
      printf("\t\t unpacking @src\n");    
      system("tar zxf $corpusdir/compressed/@src -C $corpusdir/src\n") == 0 or die "Failed to extract @src\n";	
      	  	
      # Unpack Binary
      printf("\t\t unpacking @bin\n");
      system("mv -f $corpusdir/src/@bin $corpusdir/bin\n") == 0 or die "Failed to extract @bin\n";				
      		   	          
}

sub list_names {
	my ($appverdir) = @_;
	opendir(COMPRESSED, "$appverdir/compressed") || die "can't open $appverdir/compressed: $!";
      	my @archives = grep {/^antlr/} readdir(COMPRESSED);
      	close(COMPRESSED);
	return @archives;
}
